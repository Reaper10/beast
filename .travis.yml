# This Source Code Form is licensed MPL-2.0: http://mozilla.org/MPL/2.0
#
# http://docs.travis-ci.com/user/customizing-the-build/
# http://lint.travis-ci.org/

os: linux
services: docker
language: generic

env:
  global:
    - bionic="ubuntu:bionic"
    - artful="ubuntu:artful"
    - xenial="ubuntu:xenial"
    - cosmic="ubuntu:cosmic"
  matrix:
    - D=bionic I=appimage,up            # gcc
    - D=bionic I=checks,up
    - D=bionic I=tidy,up
    - D=bionic I=clang,distcheck
    - D=artful I=gcc
    - D=xenial I=gcc
    # upcoming releases
    - D=cosmic I=gcc
    #- D=debian:unstable    I=gcc
    #- D=debian:unstable    I=clang
matrix:
  allow_failures:
    - env: D=cosmic I=gcc
    #- env: D=debian:unstable    I=gcc
    #- env: D=debian:unstable    I=clang
  fast_finish: true

before_install:
  # Show build setup
  - echo "D=$D I=$I"
  - uname -a
  - cat /etc/os-release
  # avoid executable uploads for branches and PRs
  - test "$TRAVIS_BRANCH^$TRAVIS_PULL_REQUEST" = "master^false" || I=$(sed '/\bappimage\b/s/,\?\bup\b//' <<<$I)

install:
  - env | grep '^AUTHSECRET_\w\+=' >.secrets && unset `sed 's/=.*//' .secrets` || true
  # git describe requires complete history
  - travis_retry git fetch --unshallow

before_script:
  - CICACHE_BIONIC='timjanik/ci-cache:bionic-s180929'
  # Fetch initial bionic docker build stages from docker hub
  - bash -c "! [[ $D =~ bionic ]]" || docker pull "$CICACHE_BIONIC" || true

script:
  # Build inside docker container
  - time docker build --cache-from "$CICACHE_BIONIC" -f misc/Dockerfile-apt --build-arg DIST="${!D}" --build-arg INTENT="$I" -t beast-ci .

after_success:
  - echo "OK, all done."

notifications:
  irc:
    channels:
      - "irc.gimp.org#beast"
    on_success: always
    on_failure: always
    skip_join: true
  email: false
    #recipients:
    #  - beast@gnome.org
    #on_success: never
    #on_failure: change
