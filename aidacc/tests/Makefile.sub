# This Source Code Form is licensed MPL-2.0: http://mozilla.org/MPL/2.0

tests_checktargets =
tests_binaries     = t201-basics

# == t301-testpass-idl-test ==
t301-testpass-idl-test: tests/t301-pass.idl $(AIDACC)
	$(QTEST)
	$(Q) $(AIDACC) $< # --aida-debug $<
tests_checktargets += t301-testpass-idl-test

# == t302-testfail-idl-test ==
t302-testfail-idl-test: tests/t302-fail.idl tests/t302-fail.ref $(AIDACC)
	$(QTEST)
	$(Q) $(AIDACC) --aida-fail-file-test $<> $@.out
	$(Q) sed 's/\(:[0-9]\+:[0-9]\+: Trying to find one of \).*/\1.../' < $@.out > $@.notokens && mv $@.notokens $@.out
	$(Q) diff -up tests/t302-fail.ref $@.out && rm -f $@.out
tests_checktargets += t302-testfail-idl-test

# == tests_binaries ==
define tests_run_RULE
all_targets += tests/$(1)
.PHONY: tests/run-$(1)
$(1)--testexec: tests/$(1)
	@echo '  EXEC    ' $(1)
	$$(Q) tests/$(1)
tests_checktargets += $(1)--testexec
CLEANFILES += tests/$(1)
.PHONY: tests/run-$(1)
endef
$(foreach PRG,$(tests_binaries),$(eval $(call tests_run_RULE,$(PRG))))
tests/%: tests/%.cc tests/testing.hh aidacc/aida.hh aida.o
	$(CXXCOMPILE) $(CXXFLAGS) $< aida.o -o $@

# == check-tests ==
check-tests: $(sort $(tests_checktargets))
check-local: check-tests
.PHONY: check-tests

