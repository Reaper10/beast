# This Source Code Form is licensed MPL-2.0: http://mozilla.org/MPL/2.0

aidacc_tests_checkrules   =
aidacc_tests_binaries     =
AIDACC_TESTS_CLEANFILES   =
noinst_PROGRAMS          += $(aidacc_tests_binaries)

# == t201-basics ==
aidacc_tests_binaries           += aidacc/tests/t201-basics
aidacc_tests_t201_basics_LDADD   = $(LIBBSE_LIBS)
aidacc_tests_t201_basics_SOURCES = 	\
	aidacc/aida.cc			\
	aidacc/tests/t201-basics.cc

# == t301-testpass-idl-test ==
t301-testpass-idl-test: aidacc/tests/t301-pass.idl $(AIDACC)
	$(QTEST)
	$(Q) $(AIDACC) $< # --aida-debug $<
aidacc_tests_checkrules += t301-testpass-idl-test

# == t302-testfail-idl-test ==
t302-testfail-idl-test: aidacc/tests/t302-fail.idl aidacc/tests/t302-fail.ref $(AIDACC)
	$(QTEST)
	$(Q) $(AIDACC) --aida-fail-file-test $<> $@.out
	$(Q) sed 's/\(:[0-9]\+:[0-9]\+: Trying to find one of \).*/\1.../' < $@.out > $@.notokens && mv $@.notokens $@.out
	$(Q) diff -up aidacc/tests/t302-fail.ref $@.out && rm -f $@.out
aidacc_tests_checkrules += t302-testfail-idl-test

# == t303-explore ==
aidacc_tests_binaries            += aidacc/tests/t303-explore
aidacc_tests_t303_explore_SOURCES =	\
	aidacc/aida.cc			\
	aidacc/tests/t303-explore.cc
tests_t303_generated                 =      	\
	aidacc/tests/t303-explore_interfaces.hh	\
	aidacc/tests/t303-explore_interfaces.cc	\
        aidacc/tests/t303-explore_handles.hh	\
        aidacc/tests/t303-explore_handles.cc
# MAKE(1) supports parallel execution of a multiple-targets-rule *only* for implicit rules (with '%')
aidacc/tests/t303-%_interfaces.hh aidacc/tests/t303-%_interfaces.cc aidacc/tests/t303-%_handles.hh aidacc/tests/t303-%_handles.cc: aidacc/tests/t303-%.idl $(AIDACC_CXXSTUB_PY) $(AIDACC)
	$(QGEN)
	$(Q) $(AIDACC) -x CxxStub -G strip-path=$(topdir)/ $<
	$(Q) sed -i -e '1i#define _(x) x' aidacc/tests/t303-$*_handles.cc
	$(Q) sed -i -e '1i#define _(x) x' aidacc/tests/t303-$*_interfaces.cc
AIDACC_TESTS_CLEANFILES += $(tests_t303_generated)
aidacc/tests/t303-explore.cc: $(tests_t303_generated)

# == t304-testpass-cxx-test ==
# test CxxStub Generation for Client & Server
aidacc/tests/t304-testpass-cxx: aidacc/tests/t301-pass.idl aidacc/tests/t304-cxxserver.ref $(AIDACC)
	$(QTEST)
	$(Q) cp $< aidacc/tests/t304-testpass.idl \
	&&   $(AIDACC) -x CxxStub -G iface-prefix=I_ -G aidaids -G strip-path=$(topdir)/ aidacc/tests/t304-testpass.idl \
	&&   cat aidacc/tests/t304-testpass_interfaces.cc >> aidacc/tests/t304-testpass_interfaces.hh \
	&&   cat aidacc/tests/t304-testpass_handles.cc >> aidacc/tests/t304-testpass_handles.hh \
	&&   rm -f aidacc/tests/t304-testpass.idl aidacc/tests/t304-testpass_handles.cc aidacc/tests/t304-testpass_interfaces.cc
	$(Q) diff -up aidacc/tests/t304-cxxserver.ref aidacc/tests/t304-testpass_interfaces.hh && rm -f aidacc/tests/t304-testpass_interfaces.hh
	$(Q) diff -up aidacc/tests/t304-cxxclient.ref aidacc/tests/t304-testpass_handles.hh && rm -f aidacc/tests/t304-testpass_handles.hh
t304-testpass-cxx-test: aidacc/tests/t304-testpass-cxx
aidacc_tests_checkrules += t304-testpass-cxx-test

# == t305-testpass-compile-test ==
aidacc/tests/t305-testpass-compile: aidacc/tests/t301-pass.idl aidacc/tests/t301-inc2.idl aidacc/tests/t301-inc1.idl $(AIDACC)
	$(QTEST)
	$(Q) cp aidacc/tests/t301-inc2.idl aidacc/tests/t305-inc2.idl \
	&&   $(AIDACC) -x CxxStub -G iface-prefix=I_ -G strip-path=$(topdir)/ aidacc/tests/t305-inc2.idl \
	&&   rm -f aidacc/tests/t305-inc2.idl
	$(Q) cp aidacc/tests/t301-inc1.idl aidacc/tests/t305-inc1.idl \
	&&   $(AIDACC) -x CxxStub -G iface-prefix=I_ -G strip-path=$(topdir)/ aidacc/tests/t305-inc1.idl \
	&&   rm -f aidacc/tests/t305-inc1.idl
	$(Q) cp aidacc/tests/t301-pass.idl aidacc/tests/t305-pass.idl \
	&&   $(AIDACC) -x CxxStub -G iface-prefix=I_ -G strip-path=$(topdir)/ aidacc/tests/t305-pass.idl \
	&&   rm -f aidacc/tests/t305-pass.idl
	$(Q) sed -e '1i#include "t305-inc2_interfaces.cc"' \
	         -e '1i#include "t305-inc1_interfaces.cc"' \
		 -e '1i#define _(x) x' -i aidacc/tests/t305-pass_interfaces.cc
	$(Q) sed -e '1i#include "t305-inc2_handles.cc"' \
		 -e '1i#include "t305-inc1_handles.cc"' \
		 -e '1i#define _(x) x' -i aidacc/tests/t305-pass_handles.cc
	$(Q) cd aidacc/tests/ && $(CXXCOMPILE) $(CXXFLAGS) -I../.. t305-pass_interfaces.cc -c
	$(Q) cd aidacc/tests/ && $(CXXCOMPILE) $(CXXFLAGS) -I../.. t305-pass_handles.cc -c
AIDACC_TESTS_CLEANFILES += \
	aidacc/tests/t305-inc1_interfaces.hh	\
	aidacc/tests/t305-inc1_interfaces.cc	\
	aidacc/tests/t305-inc1_handles.hh	\
	aidacc/tests/t305-inc1_handles.cc	\
	aidacc/tests/t305-inc2_interfaces.hh	\
	aidacc/tests/t305-inc2_interfaces.cc	\
	aidacc/tests/t305-inc2_handles.hh	\
	aidacc/tests/t305-inc2_handles.cc	\
	aidacc/tests/t305-pass_interfaces.hh	\
	aidacc/tests/t305-pass_interfaces.cc	\
	aidacc/tests/t305-pass_handles.hh	\
	aidacc/tests/t305-pass_handles.cc
t305-testpass-compile-test: aidacc/tests/t305-testpass-compile
aidacc_tests_checkrules += t305-testpass-compile-test

# == t204-aidatests.cc ==
aidacc_tests_binaries += aidacc/tests/t204-aidatests
aidacc_tests_t204_aidatests_SOURCES =	\
	aidacc/aida.cc			\
	aidacc/tests/t204-aidatests.cc

# == clean-aidacc-tests ==
clean-aidacc-tests:
	rm -f $(AIDACC_TESTS_CLEANFILES) aidacc/tests/*.$(OBJEXT)
.PHONY: clean-aidacc-tests
clean-aidacc: clean-aidacc-tests

# == check-aidacc-tests ==
check-aidacc-tests: $(aidacc_tests_checkrules)
check-aidacc-tests: $(sort $(aidacc_tests_binaries:aidacc/tests/%=check-aidacc-tests-%))
check-aidacc-tests-PHONY:
.PHONY: $(aidacc_tests_checkrules) check-aidacc-tests check-aidacc-tests-PHONY
check-aidacc-tests-%: aidacc/tests/% check-aidacc-tests-PHONY
	@echo '  EXEC    ' $<
	$(Q) $<
check-aidacc: check-aidacc-tests
