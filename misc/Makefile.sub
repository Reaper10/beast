# BEAST misc/ - CI/CD rules

# Aoid defining the conventional misc-clean, misc-check, etc rules which
# are likely to be mistaken for something else than misc/ specific rules.
#
# Instead, misc/Makefile.sub serves as an extension to the toplevel make
# rules and provides continuous integration/development rules.

# == cppcheck ==
cppcheck:
	$(AM_V_GEN)
	$(Q) mkdir -p out/logs/
	misc/run-cppcheck.sh
	$(Q) mv cppcheck.err out/logs/cppcheck.log
	misc/blame-lines -b out/logs/cppcheck.log
.PHONY: cppcheck
# A regular cppcheck run can be carried out before the sources are built

# == scan-build ==
scan-build:
	$(AM_V_GEN)
	$(Q) rm -rf out/scan-build/
	$(Q) mkdir -p out/logs/ out/scan-build/
	$(Q) echo "  CHECK   " "for CXX to resemble clang++"
	$(Q) $(CXX) --version | grep '\bclang\b'
	scan-build -o out/scan-build/ --use-cc "$(CC)" --use-c++ "$(CXX)" $(MAKE) -j`nproc`
	$(Q) shopt -s nullglob ; \
	      for r in out/scan-build/20??-??-??-*/report-*.html ; do \
		D=$$(sed -nr '/<!-- BUGDESC/ { s/^<!-- \w+ (.+) -->/\1/    ; p }' $$r) && \
		F=$$(sed -nr '/<!-- BUGFILE/ { s/^<!-- \w+ ([^ ]+) -->/\1/ ; p }' $$r) && \
		L=$$(sed -nr '/<!-- BUGLINE/ { s/^<!-- \w+ ([^ ]+) -->/\1/ ; p }' $$r) && \
		echo "$$F:$$L: $$D" | sed 's,^/usr/src/beast/,,' ; \
	      done > out/logs/scan-build.log
	$(Q) shopt -s nullglob ; \
	      for d in out/scan-build/20??-??-??-*/ ; do \
		rm -rf out/logs/html/ ; \
		mv -v "$$d" out/logs/html/ || exit 1 ; \
		break ; \
	      done
	$(Q) rm -rf out/scan-build/
	misc/blame-lines -b out/logs/scan-build.log
.PHONY: scan-build
# Note, 'make scan-build' requires 'configure CC=clang CXX=g++' to generate any reports.

# == clang-tidy ==
clang-tidy:
	$(AM_V_GEN)
	$(Q) mkdir -p out/logs/
	$(Q) git ls-tree -r --name-only HEAD >tmpls.all
	$(Q) egrep $(CLANG_TIDY_GLOB) <tmpls.all >tmpls.cchh
	$(Q) egrep -vf misc/clang-tidy.ignore tmpls.cchh >tmpls.clangtidy
	clang-tidy `cat tmpls.clangtidy` -- \
	  -std=gnu++14 \
	  -I . \
	  -I sfi \
	  -I beast-gtk \
	  -I external/v8pp/ \
	  -I ebeast/node_modules/node-gyp/cache/.node-gyp/iojs-*/src/ \
	  -I ebeast/node_modules/node-gyp/cache/.node-gyp/iojs-*/deps/v8/include/ \
	  -DBSE_COMPILATION \
	  -DGXK_COMPILATION \
	  -D__TOPDIR__=\"`pwd`\" \
	  `pkg-config --cflags libgnomecanvas-2.0` \
	  > out/logs/clang-tidy.raw
	$(Q) sed "s,^`pwd`/,," out/logs/clang-tidy.raw >out/logs/clang-tidy.log
	$(Q) rm -f out/logs/clang-tidy.raw tmpls.all tmpls.cchh tmpls.clangtidy
	misc/blame-lines -b out/logs/clang-tidy.log
CLANG_TIDY_GLOB := "^(aidacc|bse|plugins|drivers|beast-gtk|ebeast|tools|launchers)/.*\.(cc|hh)$$"
.PHONY: clang-tidy
# Note, 'make clang-tidy' requires a successfuly built source tree.
